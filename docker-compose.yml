version: '3.4'
name: towerofdaedalus

services:
  towerofdaedalus_webapp_razor:
    image: ${DOCKER_REGISTRY-}towerofdaedaluswebapprazor
    build:
      context: .
      dockerfile: TowerOfDaedalus_WebApp_Razor/Dockerfile
    depends_on:
        arangodb:
            condition: service_started
        zookeeper:
            condition: service_started
        kafka:
            condition: service_started
        towerofdaedalus_webapp_discordbot:
            condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5100;http://+:5000
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/root/.aspnet/https/TowerOfDaedelus_WebApp.pfx
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - ARANGO_DB_NAME=${ARANGO_DB_NAME}
      - ARANGO_SYSTEM_DB_NAME=${ARANGO_SYSTEM_DB_NAME}
      - ARANGO_SYSTEM_USER_NAME=${ARANGO_SYSTEM_USER_NAME}
      - ARANGO_SYSTEM_PASSWORD=${ARANGO_SYSTEM_PASSWORD}
      - ARANGO_URL=${ARANGO_URL}
      - ARANGO_NEW_USERNAME=${ARANGO_NEW_USERNAME}
      - ARANGO_NEW_PASSWORD=${ARANGO_NEW_PASSWORD}
    ports:
      - 5000:5000
      - 5100:5100
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ./Persistance/Logs:/var/opt/Logs
    #healthcheck:
    #  test: ["CMD", "wget", "--fail", "http://localhost:5000/healthz"]
    #  interval: 1m30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 40s
    networks:
        - daedalus-dev

  towerofdaedalus_webapp_blazor:
    image: ${DOCKER_REGISTRY-}towerofdaedaluswebappblazor
    build:
      context: .
      dockerfile: TowerOfDaedalus_WebApp_Blazor/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5101;http://+:5001
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - ARANGO_DB_NAME=${ARANGO_DB_NAME}
      - ARANGO_SYSTEM_DB_NAME=${ARANGO_SYSTEM_DB_NAME}
      - ARANGO_SYSTEM_USER_NAME=${ARANGO_SYSTEM_USER_NAME}
      - ARANGO_SYSTEM_PASSWORD=${ARANGO_SYSTEM_PASSWORD}
      - ARANGO_URL=${ARANGO_URL}
      - ARANGO_NEW_USERNAME=${ARANGO_NEW_USERNAME}
      - ARANGO_NEW_PASSWORD=${ARANGO_NEW_PASSWORD}
    ports:
      - 5001:5001
      - 5101:5101
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
      - ./Persistance/Logs:/var/opt/Logs
    depends_on:
        arangodb:
            condition: service_started
        zookeeper:
            condition: service_started
        kafka:
            condition: service_started
        towerofdaedalus_webapp_discordbot:
            condition: service_started
        towerofdaedalus_webapp_razor:
            condition: service_started
    #healthcheck:
    #  test: ["CMD", "wget", "--fail", "http://localhost:5001/healthz"]
    #  interval: 1m30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 40s
    networks:
        - daedalus-dev

  towerofdaedalus_webapp_discordbot:
    image: ${DOCKER_REGISTRY-}towerofdaedaluswebappdiscordbot
    build:
      context: .
      dockerfile: TowerOfDaedalus_WebApp_DiscordBot/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Development
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - ARANGO_DB_NAME=${ARANGO_DB_NAME}
      - ARANGO_SYSTEM_DB_NAME=${ARANGO_SYSTEM_DB_NAME}
      - ARANGO_SYSTEM_USER_NAME=${ARANGO_SYSTEM_USER_NAME}
      - ARANGO_SYSTEM_PASSWORD=${ARANGO_SYSTEM_PASSWORD}
      - ARANGO_URL=${ARANGO_URL}
      - ARANGO_NEW_USERNAME=${ARANGO_NEW_USERNAME}
      - ARANGO_NEW_PASSWORD=${ARANGO_NEW_PASSWORD}
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ./Persistance/Logs:/var/opt/Logs
    #healthcheck:
        #  test: ["CMD", "wget", "--fail", "http://localhost:5003/healthz"]
        #  interval: 1m30s
        #  timeout: 10s
        #  retries: 3
        #  start_period: 40s
    networks:
        - daedalus-dev

  towerofdaedalus_webapp_restapi:
    image: ${DOCKER_REGISTRY-}towerofdaedaluswebapprestapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5102;http://+:5002
    ports:
        - 5002:5002
        - 5102:5102
    volumes:
        - ./Persistance/Logs:/var/opt/Logs
    build:
      context: .
      dockerfile: TowerOfDaedalus_WebApp_RESTApi/Dockerfile
    depends_on:
        - arangodb
        - zookeeper
        - kafka
    #healthcheck:
    #  test: ["CMD", "wget", "--fail", "http://localhost:5002/healthz"]
    #  interval: 1m30s
    #  timeout: 10s
    #  retries: 3
    #  start_period: 40s
    networks:
        - daedalus-dev

  arangodb:
    image: arangodb:latest
    ports:
        - 8529:8529
    hostname: arangodb
    environment:
        - ARANGO_ROOT_PASSWORD=${ARANGO_SYSTEM_PASSWORD}
    volumes:
        - ./Persistance/Arango:/var/lib/arangodb3
    networks:
        - daedalus-dev

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
        - 2181:2181
    environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
        - ./Persistance/zookeeper:/bitnami/zookeeper
    networks:
        - daedalus-dev

  kafka:
    image: bitnami/kafka:latest
    ports:
        - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    volumes:
      - ./Persistance/Kafka:/bitnami/kafka
    networks:
        - daedalus-dev

networks:
  daedalus-dev:
    driver: overlay
    attachable: true
