// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TowerOfDaedelus_WebApp.Data;

#nullable disable

namespace TowerOfDaedelus_WebApp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220318091331_CreatePrimaryData2")]
    partial class CreatePrimaryData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.2.22153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscordUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.CharSheet", b =>
                {
                    b.Property<int>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CharacterID"), 1L, 1);

                    b.Property<int?>("Agility")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Constitution")
                        .HasColumnType("int");

                    b.Property<int?>("EnergyPoints")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastChanged")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Mind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalDescriptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PreviouslyNPC")
                        .HasColumnType("bit");

                    b.Property<int?>("Soul")
                        .HasColumnType("int");

                    b.Property<int?>("Strength")
                        .HasColumnType("int");

                    b.Property<int?>("TraitPoints")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CharacterID");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("CharSheet");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.DieRolls", b =>
                {
                    b.Property<int>("RollID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RollID"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterAbility")
                        .HasColumnType("int");

                    b.Property<string>("DetailedResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DieType")
                        .HasColumnType("int");

                    b.Property<int?>("GMRollModifier")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdvantage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisadvantage")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfRolls")
                        .HasColumnType("int");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<int?>("SourceCharacterID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("RollID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CharSheetCharacterID");

                    b.ToTable("DieRolls");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentID"), 1L, 1);

                    b.Property<int?>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EquipmentID");

                    b.HasIndex("CharSheetCharacterID");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.EquipmentTraits", b =>
                {
                    b.Property<int>("EquipmentTraitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentTraitID"), 1L, 1);

                    b.Property<int?>("AbilityPointCost")
                        .HasColumnType("int");

                    b.Property<int?>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<string>("CharacterID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnergyCost")
                        .HasColumnType("int");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipmentTraitID");

                    b.HasIndex("CharSheetCharacterID");

                    b.ToTable("EquipmentTraits");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.FeaturedArticles", b =>
                {
                    b.Property<int>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleID"), 1L, 1);

                    b.Property<string>("ArticleUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.HasKey("ArticleID");

                    b.ToTable("FeaturedArticles");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.GMRequests", b =>
                {
                    b.Property<int>("RequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestID"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRelayed")
                        .HasColumnType("bit");

                    b.Property<string>("RequesterID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Urgency")
                        .HasColumnType("int");

                    b.HasKey("RequestID");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("GMRequests");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.Languages", b =>
                {
                    b.Property<int>("LanguageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LanguageID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OriginTraitID")
                        .HasColumnType("int");

                    b.Property<int?>("OriginTraitsOriginTraitID")
                        .HasColumnType("int");

                    b.HasKey("LanguageID");

                    b.HasIndex("OriginTraitsOriginTraitID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.MissionApplications", b =>
                {
                    b.Property<int>("MissionApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionApplicationID"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InformationSought")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDenied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnderReview")
                        .HasColumnType("bit");

                    b.Property<string>("RelevantExteriorGM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MissionApplicationID");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("MissionApplications");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.NPCApplications", b =>
                {
                    b.Property<int>("NPCApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NPCApplicationID"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Experience1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExperienceLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDenied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnderReview")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vouch1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vouch2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vouch3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NPCApplicationID");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("NPCApplications");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.NPCDescriptions", b =>
                {
                    b.Property<string>("NPCID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Affiliation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BriefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportantEvents")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsGMNPC")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccupationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Player")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trivia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NPCID");

                    b.ToTable("NPCDescriptions");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.OriginTraits", b =>
                {
                    b.Property<int>("OriginTraitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OriginTraitID"), 1L, 1);

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OriginTraitID");

                    b.ToTable("OriginTraits");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.PlayerApplications", b =>
                {
                    b.Property<int>("PlayerApplicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerApplicationID"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<string>("Experience1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExperienceLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDenied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnderReview")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vouch1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vouch2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vouch3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerApplicationID");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CharSheetCharacterID");

                    b.ToTable("PlayerApplications");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.PrimaryTraits", b =>
                {
                    b.Property<int>("PrimaryTraitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrimaryTraitID"), 1L, 1);

                    b.Property<int?>("AbilityPointCost")
                        .HasColumnType("int");

                    b.Property<int?>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnergyCost")
                        .HasColumnType("int");

                    b.Property<bool>("IsEdge")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMajor")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrimaryTraitID");

                    b.HasIndex("CharSheetCharacterID");

                    b.ToTable("PrimaryTraits");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.QuestList", b =>
                {
                    b.Property<int>("QuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestId"), 1L, 1);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("AssociatedNPC")
                        .HasColumnType("int");

                    b.Property<int>("AuthroID")
                        .HasColumnType("int");

                    b.Property<string>("BriefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnemyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NPCDescriptionsNPCID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RewardDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("NPCDescriptionsNPCID");

                    b.ToTable("QuestList");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.RPSchedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleID"), 1L, 1);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LobbyStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ScheduleID");

                    b.ToTable("RPSchedule");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.TeamMembers", b =>
                {
                    b.Property<int>("MissionApplicationsApplicationID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterSheetsCharacterID")
                        .HasColumnType("int");

                    b.Property<int>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<int>("MissionApplicationID")
                        .HasColumnType("int");

                    b.HasKey("MissionApplicationsApplicationID", "CharacterSheetsCharacterID");

                    b.HasIndex("CharSheetCharacterID");

                    b.HasIndex("MissionApplicationID");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.TemporaryTraits", b =>
                {
                    b.Property<int>("TemporaryTraitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemporaryTraitID"), 1L, 1);

                    b.Property<int?>("CharSheetCharacterID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EnergyCost")
                        .HasColumnType("int");

                    b.Property<bool>("IsPassive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TemporaryTraitID");

                    b.HasIndex("CharSheetCharacterID");

                    b.ToTable("TemporaryTraits");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.VisionTypes", b =>
                {
                    b.Property<int>("VisionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisionID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OriginTraitID")
                        .HasColumnType("int");

                    b.Property<int?>("OriginTraitsOriginTraitID")
                        .HasColumnType("int");

                    b.HasKey("VisionID");

                    b.HasIndex("OriginTraitsOriginTraitID");

                    b.ToTable("VisionTypes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.CharSheet", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("CharSheets")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.DieRolls", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("DieRolls")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", null)
                        .WithMany("DieRolls")
                        .HasForeignKey("CharSheetCharacterID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.Equipment", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", null)
                        .WithMany("Equipment")
                        .HasForeignKey("CharSheetCharacterID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.EquipmentTraits", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", null)
                        .WithMany("EquipmentTraits")
                        .HasForeignKey("CharSheetCharacterID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.GMRequests", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("GMRequests")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.Languages", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.OriginTraits", null)
                        .WithMany("Languages")
                        .HasForeignKey("OriginTraitsOriginTraitID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.MissionApplications", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("MissionApplications")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.NPCApplications", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("NPCApplications")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.PlayerApplications", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("PlayerApplications")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", "CharSheet")
                        .WithMany()
                        .HasForeignKey("CharSheetCharacterID");

                    b.Navigation("CharSheet");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.PrimaryTraits", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", null)
                        .WithMany("PrimaryTraits")
                        .HasForeignKey("CharSheetCharacterID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.QuestList", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.ApplicationUser", null)
                        .WithMany("QuestLists")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("TowerOfDaedelus_WebApp.Models.NPCDescriptions", null)
                        .WithMany("questLists")
                        .HasForeignKey("NPCDescriptionsNPCID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.TeamMembers", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", "CharSheet")
                        .WithMany("TeamMembers")
                        .HasForeignKey("CharSheetCharacterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TowerOfDaedelus_WebApp.Models.MissionApplications", "MissionApplication")
                        .WithMany("TeamMembers")
                        .HasForeignKey("MissionApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CharSheet");

                    b.Navigation("MissionApplication");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.TemporaryTraits", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.CharSheet", null)
                        .WithMany("TemporaryTraits")
                        .HasForeignKey("CharSheetCharacterID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.VisionTypes", b =>
                {
                    b.HasOne("TowerOfDaedelus_WebApp.Models.OriginTraits", null)
                        .WithMany("VisionTypes")
                        .HasForeignKey("OriginTraitsOriginTraitID");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.ApplicationUser", b =>
                {
                    b.Navigation("CharSheets");

                    b.Navigation("DieRolls");

                    b.Navigation("GMRequests");

                    b.Navigation("MissionApplications");

                    b.Navigation("NPCApplications");

                    b.Navigation("PlayerApplications");

                    b.Navigation("QuestLists");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.CharSheet", b =>
                {
                    b.Navigation("DieRolls");

                    b.Navigation("Equipment");

                    b.Navigation("EquipmentTraits");

                    b.Navigation("PrimaryTraits");

                    b.Navigation("TeamMembers");

                    b.Navigation("TemporaryTraits");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.MissionApplications", b =>
                {
                    b.Navigation("TeamMembers");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.NPCDescriptions", b =>
                {
                    b.Navigation("questLists");
                });

            modelBuilder.Entity("TowerOfDaedelus_WebApp.Models.OriginTraits", b =>
                {
                    b.Navigation("Languages");

                    b.Navigation("VisionTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
